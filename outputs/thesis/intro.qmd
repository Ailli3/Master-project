# Introduction {#sec-intro}
In conducting an experiment, a proper design of experiment is crucial for ensuring accurate and reliable results.A row-column design is a particular type of experimental design where the experimental unit is defined by the combination of two orthogonal factors, typically arranged in rows and columns. The row-column experimental structure is common in many biological applications, e.g. 96-well plates and crop field trials. The treatments of interest are then randomly allocated with certain constraints as not to confound the treatments with nuisance factors.

Generally, a row-column design can be defined as

::: {#def-Row-column-design}
A row-column design refers to an experiment where experimental units are defined by the combination of $n_c$ columns and $n_r$ rows with $n_t$ treatments allocated to the $n = n_cn_r$ experimental units.
:::

For row-column designs, we typically use a design matrix to model the arrangement of treatments.

::: {#def-design-matrix}
A design matrix $\boldsymbol{X}$ is a matrix that represents the arrangement of experimental units across different treatments in an experimental design. Each row corresponds to an experimental unit, and each column corresponds a treatment level.
:::


Different treatments usually have varying effects on the experimental outcomes, known as treatment effects. The goal of our experimental design is to more accurately measure and estimate the impact of different treatments on the experimental results, i.e., the treatment effects.To offer precise estimation of treatment effects,  one way is to seek the optimal value of some statistic criteria, for example, A-criteria, minimizing the variance of elementary treatment contrasts. @butler2013optimal has show the relation between optimizing design and minimizing the value of A-criteria, and show some possible algorithms to search optimal design in feasible set. These algorithms mainly focus on comparing the arrangements of different treatments, that is, doing permutations, and calculating their A values, optimizing design by iterations.

However, some undesired cluster of replications or some treatment may occur when algorithm are doing permutations along rows and columns.In an experimental design, a treatment usually has multiple replications. Specifically, clustering can refer to multiple replications of the same treatment being grouped together, or different treatments’ replications frequently being grouped together in the experimental design. @piepho2018neighbor found that such clustering is considered undesirable by experimenters who worry that irregular environmental gradients might negatively impact multiple replications of the same treatment, potentially leading to biased treatment effect estimates. Williams emphasis that there is a need to design a strategy to avoid clustering and achieve even distribution of treatment replications among the experimental field. Two properties of design are introduced. Evenness of distribution of treatment replications, abbreviated as ED, and neighbour balance, abbreviated as NB. Evenness of distribution represents how multiple replications of a treatment are evenly spread across the design field, rather than being placed close to each other. Neighbour balance, on the other hand, indicates that multiple treatments are not consistently placed next to each other in the design, promoting a more diverse adjacency relationship between treatments.A good ED ensures every replications of a treatment are widely spread in experimental field, and NB helps to avoid replications of the some treatment cluster together repeatedly. Williams introduce a scoring system to analysis ED and NB for a specific design, and introduce a algorithm to optimize ED, NB and some average efficiency factor can be represented by a specific statistic criteria.

We offer an optimization strategy for a design problem, which we can improving ED and NB during optimizing statistic criteria for a design, and avoid unwanted clustering and self-adjacency on the resulting design.In this algorithm, we use A-criteria to evaluate the efficiency of a design. Before the algorithm, we randomly generate a design as an initial design, and calculate the A-criteria as initial value. We update design by selecting a better among its neighbours. The neighbours are pair-wise permutations of a design. Typically, we select a neighbour from all pairwise permutations of a design for iteration, but this does not ensure ED and NB. To ensure ED and NB during optimization, we add some constraints when generating the pairwise permutations, only maintain or better properties are accepted. By filtering design with bad ED and NB, we then optimize the statistic criteria of the design.

In the background section, we introduced how to model row-column designs by linear mixed, introduced the methods for calculating various statistics and the meaning behind them, and provided relevant mathematical proofs. In the Methods section, we outlined the relevant assumptions made for row-column designs. We introduced three search algorithms—random search and two cooling schedules for simulated annealing—providing detailed descriptions of their steps and discussing their convergence properties. In the Results section, we first provide details of our simulation set-up,  presenting specific results with various figures, analyze the performance of different algorithms, and made comparisons among them. In the Discussion section, we outline our limitations and discussed some potential future directions.

